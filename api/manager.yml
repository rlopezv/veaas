openapi: 3.0.1
info:
  title: Service API
  description: |-
     Description of Service API. Includes requrired services for managing it.
  version: 0.0.1-SNAPSHOT
servers:
- url: /
paths:
  /api/v1/account:
    get:
      tags:
      - AccountService
      summary: ListAccounts returns the list of accounts
      operationId: AccountService_ListAccounts
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountAccountsList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/account/check/{resource}/{action}/{subresource}:
    get:
      tags:
      - AccountService
      summary: Checks if the current account has permission to perform an action
      operationId: AccountService_Check
      parameters:
      - name: resource
        in: path
        required: true
        schema:
          type: string
      - name: action
        in: path
        required: true
        schema:
          type: string
      - name: subresource
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountCheckResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/account/password:
    put:
      tags:
      - AccountService
      summary: Update Password updates an account's password to a new value
      operationId: AccountService_UpdatePassword
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/accountUpdatePasswordRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountUpdatePasswordResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/account/{name}:
    get:
      tags:
      - AccountService
      summary: GetAccount returns an account
      operationId: AccountService_GetAccount
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountAccount'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/account/{name}/token:
    post:
      tags:
      - AccountService
      summary: CreateToken creates a token
      operationId: AccountService_CreateToken
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/accountCreateTokenRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountCreateTokenResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/account/{name}/token/{id}:
    delete:
      tags:
      - AccountService
      summary: DeleteToken deletes a token
      operationId: AccountService_DeleteToken
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/accountEmptyResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments:
    get:
      tags:
      - EnvironmentService
      summary: List returns list of environments
      operationId: EnvironmentService_List
      parameters:
      - name: name
        in: query
        description: the environment's name.
        schema:
          type: string
      - name: refresh
        in: query
        description: forces environment reconciliation if set to true.
        schema:
          type: string
      - name: resourceVersion
        in: query
        description: when specified with a watch call, shows changes that occur after
          that particular version of a resource.
        schema:
          type: string
      - name: selector
        in: query
        description: the selector to to restrict returned list to environments only
          with matched labels.
        schema:
          type: string
      - name: repo
        in: query
        description: the repoURL to restrict returned list environments.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironmentList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - EnvironmentService
      summary: Create creates an environment
      operationId: EnvironmentService_Create
      parameters:
      - name: upsert
        in: query
        schema:
          type: boolean
      - name: validate
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaEnvironment'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{environment.metadata.name}:
    put:
      tags:
      - EnvironmentService
      summary: Update updates an environment
      operationId: EnvironmentService_Update
      parameters:
      - name: environment.metadata.name
        in: path
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        required: true
        schema:
          type: string
      - name: validate
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaEnvironment'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{environmentName}/managed-resources:
    get:
      tags:
      - EnvironmentService
      summary: ManagedResources returns list of managed resources
      operationId: EnvironmentService_ManagedResources
      parameters:
      - name: environmentName
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentManagedResourcesResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{environmentName}/resource-tree:
    get:
      tags:
      - EnvironmentService
      summary: ResourceTree returns resource tree
      operationId: EnvironmentService_ResourceTree
      parameters:
      - name: environmentName
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironmentTree'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}:
    get:
      tags:
      - EnvironmentService
      summary: Get returns an environment by name
      operationId: EnvironmentService_Get
      parameters:
      - name: name
        in: path
        description: the environment's name
        required: true
        schema:
          type: string
      - name: refresh
        in: query
        description: forces environment reconciliation if set to true.
        schema:
          type: string
      - name: resourceVersion
        in: query
        description: when specified with a watch call, shows changes that occur after
          that particular version of a resource.
        schema:
          type: string
      - name: selector
        in: query
        description: the selector to to restrict returned list to environments only
          with matched labels.
        schema:
          type: string
      - name: repo
        in: query
        description: the repoURL to restrict returned list environments.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
      - EnvironmentService
      summary: Delete deletes an environment
      operationId: EnvironmentService_Delete
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: cascade
        in: query
        schema:
          type: boolean
      - name: propagationPolicy
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    patch:
      tags:
      - EnvironmentService
      summary: Patch patch an environment
      operationId: EnvironmentService_Patch
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/environmentEnvironmentPatchRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{name}/events:
    get:
      tags:
      - EnvironmentService
      summary: ListResourceEvents returns a list of event resources
      operationId: EnvironmentService_ListResourceEvents
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: resourceNamespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: resourceUID
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1EventList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/logs:
    get:
      tags:
      - EnvironmentService
      summary: Returns stream of log entries for the specified environment
      operationId: EnvironmentService_EnvironmentLogs
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: podName
        in: query
        schema:
          type: string
      - name: container
        in: query
        schema:
          type: string
      - name: sinceSeconds
        in: query
        schema:
          type: string
          format: int64
      - name: sinceTime.seconds
        in: query
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        schema:
          type: string
          format: int64
      - name: sinceTime.nanos
        in: query
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive. This field may be limited in precision depending on context.
        schema:
          type: integer
          format: int32
      - name: tailLines
        in: query
        schema:
          type: string
          format: int64
      - name: follow
        in: query
        schema:
          type: boolean
      - name: untilTime
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.(streaming responses)
          content:
            environment/json:
              schema:
                description: Stream result of environmentLogEntry
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/runtimeError'
                  result:
                    $ref: '#/components/schemas/environmentLogEntry'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/manifests:
    get:
      tags:
      - EnvironmentService
      summary: GetManifests returns environment manifests
      operationId: EnvironmentService_GetManifests
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryManifestResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/operation:
    delete:
      tags:
      - EnvironmentService
      summary: Terminate Operation terminates the currently running operation
      operationId: EnvironmentService_TerminateOperation
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentOperationTerminateResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/device/{deviceName}/logs:
    get:
      tags:
      - EnvironmentService
      summary: DeviceLogs returns stream of log entries for the specified device.
      operationId: EnvironmentService_DeviceLogs
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: deviceName
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: container
        in: query
        schema:
          type: string
      - name: sinceSeconds
        in: query
        schema:
          type: string
          format: int64
      - name: sinceTime.seconds
        in: query
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        schema:
          type: string
          format: int64
      - name: sinceTime.nanos
        in: query
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive. This field may be limited in precision depending on context.
        schema:
          type: integer
          format: int32
      - name: tailLines
        in: query
        schema:
          type: string
          format: int64
      - name: follow
        in: query
        schema:
          type: boolean
      - name: untilTime
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.(streaming responses)
          content:
            environment/json:
              schema:
                description: Stream result of environmentLogEntry
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/runtimeError'
                  result:
                    $ref: '#/components/schemas/environmentLogEntry'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/resource:
    get:
      tags:
      - EnvironmentService
      summary: GetResource returns single environment resource
      operationId: EnvironmentService_GetResource
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentResourceResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - EnvironmentService
      summary: PatchResource patch single environment resource
      operationId: EnvironmentService_PatchResource
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      - name: patchType
        in: query
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentResourceResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
    delete:
      tags:
      - EnvironmentService
      summary: DeleteResource deletes a single environment resource
      operationId: EnvironmentService_DeleteResource
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      - name: force
        in: query
        schema:
          type: boolean
      - name: orphan
        in: query
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/resource/actions:
    get:
      tags:
      - EnvironmentService
      summary: ListResourceActions returns list of resource actions
      operationId: EnvironmentService_ListResourceActions
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentResourceActionsListResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - EnvironmentService
      summary: RunResourceAction run resource action
      operationId: EnvironmentService_RunResourceAction
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: namespace
        in: query
        schema:
          type: string
      - name: resourceName
        in: query
        schema:
          type: string
      - name: version
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{name}/revisions/{revision}/metadata:
    get:
      tags:
      - EnvironmentService
      summary: Get the meta-data (author, date, tags, message) for a specific revision
        of the environment
      operationId: EnvironmentService_RevisionMetadata
      parameters:
      - name: name
        in: path
        description: the environment's name
        required: true
        schema:
          type: string
      - name: revision
        in: path
        description: the revision of the app
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRevisionMetadata'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/environments/{name}/rollback:
    post:
      tags:
      - EnvironmentService
      summary: Rollback syncs an environment to its target state
      operationId: EnvironmentService_Rollback
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/environmentEnvironmentRollbackRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{name}/spec:
    put:
      tags:
      - EnvironmentService
      summary: UpdateSpec updates an environment spec
      operationId: EnvironmentService_UpdateSpec
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: validate
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaEnvironmentSpec'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironmentSpec'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{name}/sync:
    post:
      tags:
      - EnvironmentService
      summary: Sync syncs an environment to its target state
      operationId: EnvironmentService_Sync
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/environmentEnvironmentSyncRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaEnvironment'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/environments/{name}/syncwindows:
    get:
      tags:
      - EnvironmentService
      summary: Get returns sync windows of the environment
      operationId: EnvironmentService_GetEnvironmentSyncWindows
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/environmentEnvironmentSyncWindowsResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'

  /api/v1/providers:
    get:
      tags:
      - ProviderService
      summary: List returns list of providers
      operationId: ProviderService_List
      parameters:
      - name: server
        in: query
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaProviderList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - ProviderService
      summary: Create creates a provider
      operationId: ProviderService_Create
      parameters:
      - name: upsert
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaProvider'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaProvider'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/providers/{provider.server}:
    put:
      tags:
      - ProviderService
      summary: Update updates a provider
      operationId: ProviderService_Update
      parameters:
      - name: provider.server
        in: path
        description: Server is the API server URL of the Kubernetes provider
        required: true
        schema:
          type: string
      - name: updatedFields
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaProvider'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaProvider'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/providers/{server}:
    get:
      tags:
      - ProviderService
      summary: Get returns a provider by server address
      operationId: ProviderService_Get
      parameters:
      - name: server
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaProvider'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
      - ProviderService
      summary: Delete deletes a provider
      operationId: ProviderService_Delete
      parameters:
      - name: server
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/providerProviderResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/providers/{server}/invalidate-cache:
    post:
      tags:
      - ProviderService
      summary: InvalidateCache invalidates provider cache
      operationId: ProviderService_InvalidateCache
      parameters:
      - name: server
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaProvider'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/providers/{server}/rotate-auth:
    post:
      tags:
      - ProviderService
      summary: RotateAuth rotates the bearer token used for a provider
      operationId: ProviderService_RotateAuth
      parameters:
      - name: server
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/providerProviderResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/repocreds:
    get:
      tags:
      - RepoCredsService
      summary: ListRepositoryCredentials gets a list of all configured repository
        credential sets
      operationId: RepoCredsService_ListRepositoryCredentials
      parameters:
      - name: url
        in: query
        description: Repo URL for query.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepoCredsList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - RepoCredsService
      summary: CreateRepositoryCredentials creates a new repository credential set
      operationId: RepoCredsService_CreateRepositoryCredentials
      parameters:
      - name: upsert
        in: query
        description: Whether to create in upsert mode.
        schema:
          type: boolean
      requestBody:
        description: Repository definition
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaRepoCreds'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepoCreds'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/repocreds/{creds.url}:
    put:
      tags:
      - RepoCredsService
      summary: UpdateRepositoryCredentials updates a repository credential set
      operationId: RepoCredsService_UpdateRepositoryCredentials
      parameters:
      - name: creds.url
        in: path
        description: URL is the URL that this credentials matches to
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaRepoCreds'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepoCreds'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/repocreds/{url}:
    delete:
      tags:
      - RepoCredsService
      summary: DeleteRepositoryCredentials deletes a repository credential set from
        the configuration
      operationId: RepoCredsService_DeleteRepositoryCredentials
      parameters:
      - name: url
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repocredsRepoCredsResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/repositories:
    get:
      tags:
      - RepositoryService
      summary: ListRepositories gets a list of all configured repositories
      operationId: RepositoryService_ListRepositories
      parameters:
      - name: repo
        in: query
        description: Repo URL for query.
        schema:
          type: string
      - name: forceRefresh
        in: query
        description: Whether to force a cache refresh on repo's connection state.
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepositoryList'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    post:
      tags:
      - RepositoryService
      summary: CreateRepository creates a new repository configuration
      operationId: RepositoryService_CreateRepository
      parameters:
      - name: upsert
        in: query
        description: Whether to create in upsert mode.
        schema:
          type: boolean
      - name: credsOnly
        in: query
        description: Whether to operate on credential set instead of repository.
        schema:
          type: boolean
      requestBody:
        description: Repository definition
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaRepository'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepository'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/repositories/{repo.repo}:
    put:
      tags:
      - RepositoryService
      summary: UpdateRepository updates a repository configuration
      operationId: RepositoryService_UpdateRepository
      parameters:
      - name: repo.repo
        in: path
        description: Repo contains the URL to the remote repository
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/v1alphaRepository'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepository'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/repositories/{repo}:
    get:
      tags:
      - RepositoryService
      summary: Get returns a repository or its credentials
      operationId: RepositoryService_Get
      parameters:
      - name: repo
        in: path
        description: Repo URL for query
        required: true
        schema:
          type: string
      - name: forceRefresh
        in: query
        description: Whether to force a cache refresh on repo's connection state.
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/v1alphaRepository'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
    delete:
      tags:
      - RepositoryService
      summary: DeleteRepository deletes a repository from the configuration
      operationId: RepositoryService_DeleteRepository
      parameters:
      - name: repo
        in: path
        description: Repo URL for query
        required: true
        schema:
          type: string
      - name: forceRefresh
        in: query
        description: Whether to force a cache refresh on repo's connection state.
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryRepoResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/repositories/{repo}/environments:
    get:
      tags:
      - RepositoryService
      summary: ListApps returns list of environments in the repo
      operationId: RepositoryService_ListApps
      parameters:
      - name: repo
        in: path
        required: true
        schema:
          type: string
      - name: revision
        in: query
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryRepoEnvironmentsResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/repositories/{repo}/refs:
    get:
      tags:
      - RepositoryService
      operationId: RepositoryService_ListRefs
      parameters:
      - name: repo
        in: path
        description: Repo URL for query
        required: true
        schema:
          type: string
      - name: forceRefresh
        in: query
        description: Whether to force a cache refresh on repo's connection state.
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryRefs'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/v1/repositories/{repo}/validate:
    post:
      tags:
      - RepositoryService
      summary: ValidateAccess validates access to a repository with given parameters
      operationId: RepositoryService_ValidateAccess
      parameters:
      - name: repo
        in: path
        description: The URL to the repo
        required: true
        schema:
          type: string
      - name: username
        in: query
        description: Username for accessing repo.
        schema:
          type: string
      - name: password
        in: query
        description: Password for accessing repo.
        schema:
          type: string
      - name: sshPrivateKey
        in: query
        description: Private key data for accessing SSH repository.
        schema:
          type: string
      - name: insecure
        in: query
        description: Whether to skip certificate or host key validation.
        schema:
          type: boolean
      - name: tlsClientCertData
        in: query
        description: TLS client cert data for accessing HTTPS repository.
        schema:
          type: string
      - name: tlsClientCertKey
        in: query
        description: TLS client cert key for accessing HTTPS repository.
        schema:
          type: string
      - name: type
        in: query
        description: The type of the repo.
        schema:
          type: string
      - name: name
        in: query
        description: The name of the repo.
        schema:
          type: string
      - name: proxy
        in: query
        description: HTTP/HTTPS proxy to access the repository.
        schema:
          type: string
      requestBody:
        description: The URL to the repo
        content:
          environment/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryRepoResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/repositories/{source.repoURL}/appdetails:
    post:
      tags:
      - RepositoryService
      summary: GetAppDetails returns environment details by given path
      operationId: RepositoryService_GetAppDetails
      parameters:
      - name: source.repoURL
        in: path
        description: RepoURL is the URL to the repository (Git or Helm) that contains
          the environment manifests
        required: true
        schema:
          type: string
      requestBody:
        content:
          environment/json:
            schema:
              $ref: '#/components/schemas/repositoryRepoEnvironmentDetailsQuery'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/repositoryRepoEnvironmentDetailsResponse'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-codegen-request-body-name: body
  /api/v1/settings:
    get:
      tags:
      - SettingsService
      summary: Get returns API Service settings
      operationId: SettingsService_Get
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/providerSettings'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
  /api/version:
    get:
      tags:
      - VersionService
      summary: Version returns version information of the API server
      operationId: VersionService_Version
      responses:
        200:
          description: A successful response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/versionVersionMessage'
        default:
          description: An unexpected error response.
          content:
            environment/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
components:
  schemas:
    accountAccount:
      type: object
      properties:
        capabilities:
          type: array
          items:
            type: string
        enabled:
          type: boolean
        name:
          type: string
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/accountToken'
    accountAccountsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/accountAccount'
    accountCheckResponse:
      type: object
      properties:
        value:
          type: string
    accountCreateTokenRequest:
      type: object
      properties:
        expiresIn:
          description: expiresIn represents a duration in seconds
          type: string
          format: int64
        id:
          type: string
        name:
          type: string
    accountCreateTokenResponse:
      type: object
      properties:
        token:
          type: string
    accountEmptyResponse:
      type: object
    accountToken:
      type: object
      properties:
        expiresAt:
          type: string
          format: int64
        id:
          type: string
        issuedAt:
          type: string
          format: int64
    accountUpdatePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
        name:
          type: string
        newPassword:
          type: string
    accountUpdatePasswordResponse:
      type: object
    environmentEnvironmentPatchRequest:
      description: EnvironmentPatchRequest is a request to patch an environment
      type: object
      properties:
        name:
          type: string
        patch:
          type: string
        patchType:
          type: string
    environmentEnvironmentResourceResponse:
      type: object
      properties:
        manifest:
          type: string
    environmentEnvironmentResponse:
      type: object
      properties:
         manifests:
          type: array
          items:
            type: string
    environmentEnvironmentRollbackRequest:
      type: object
      properties:
        dryRun:
          type: boolean
        id:
          type: string
          format: int64
        name:
          type: string
        prune:
          type: boolean
    environmentEnvironmentSyncRequest:
      description: EnvironmentSyncRequest is a request to apply the config state to live state
      type: object
      properties:
        dryRun:
          type: boolean
        infos:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaInfo'
        manifests:
          type: array
          items:
            type: string
        name:
          type: string
        prune:
          type: boolean
        resources:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaSyncOperationResource'
        retryStrategy:
          $ref: '#/components/schemas/v1alphaRetryStrategy'
        revision:
          type: string
        strategy:
          $ref: '#/components/schemas/v1alphaSyncStrategy'
        syncOptions:
          $ref: '#/components/schemas/environmentSyncOptions'
    environmentEnvironmentSyncWindow:
      type: object
      properties:
        duration:
          type: string
        kind:
          type: string
        manualSync:
          type: boolean
        schedule:
          type: string
    environmentEnvironmentSyncWindowsResponse:
      type: object
      properties:
        activeWindows:
          type: array
          items:
            $ref: '#/components/schemas/environmentEnvironmentSyncWindow'
        assignedWindows:
          type: array
          items:
            $ref: '#/components/schemas/environmentEnvironmentSyncWindow'
        canSync:
          type: boolean
    environmentLogEntry:
      type: object
      properties:
        content:
          type: string
        last:
          type: boolean
        deviceName:
          type: string
        timeStamp:
          $ref: '#/components/schemas/v1Time'
        timeStampStr:
          type: string
    environmentManagedResourcesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceDiff'
    environmentOperationTerminateResponse:
      type: object
    environmentResourceActionsListResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceAction'
    environmentSyncOptions:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
    environmentv1alphaEnvEntry:
      description: EnvEntry represents an entry in the environment's environment
      type: object
      properties:
        name:
          description: Name is the name of the variable, usually expressed in uppercase
          type: string
        value:
          description: Value is the value of the variable
          type: string
    providerProviderResponse:
      type: object
    providerConnector:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    providerHelp:
      description: Help settings
      type: object
      properties:
        chatText:
          description: the text for getting chat help, defaults to "Chat now!"
          type: string
        chatUrl:
          description: the URL for getting chat help, this will typically be your Slack
            channel for support
          type: string
    providerAccessConfig:
      type: object
      properties:
        cliClientID:
          type: string
        clientID:
          type: string
        idTokenClaims:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/accessClaim'
        issuer:
          type: string
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
    providerPlugin:
      description: Plugin settings
      type: object
      properties:
        name:
          description: the name of the plugin that will implement the deployment e.g. "kasane"
          type: string
    providerSettings:
      type: object
      properties:
        appLabelKey:
          type: string
        configManagementPlugins:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaConfigManagementPlugin'
        help:
          $ref: '#/components/schemas/providerHelp'
        accessConfig:
          $ref: '#/components/schemas/providerAccessConfig'
        passwordPattern:
          type: string
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/providerPlugin'
        resourceOverrides:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/v1alphaResourceOverride'
        statusBadgeEnabled:
          type: boolean
        uiBannerContent:
          type: string
        uiBannerURL:
          type: string
        uiCssURL:
          type: string
        url:
          type: string
        userLoginsDisabled:
          type: boolean
    accessClaim:
      type: object
      properties:
        essential:
          type: boolean
        value:
          type: string
        values:
          type: array
          items:
            type: string
    contentAny:
      type: object
      properties:
        type_url:
          type: string
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    repocredsRepoCredsResponse:
      description: RepoCredsResponse is a response to most repository credentials requests
      type: object
    repositoryEnvironmentInfo:
      description: EnvironmentInfo contains environment type and app file path
      type: object
      properties:
        path:
          type: string
        type:
          type: string
    repositoryDirectoryEnvironmentSpec:
      description: DirectoryEnvironmentSpec contains directory
      type: object
    repositoryManifestResponse:
      type: object
      properties:
        manifests:
          description: |-
           Enviroment descriptor.
           TODO define descriptor
          type: array
          items:
            type: string
        namespace:
          type: string
        revision:
          description: resolved revision
          type: string
        server:
          type: string
        sourceType:
          type: string
    repositoryRefs:
      description: A subset of the repository's named refs
      type: object
      properties:
        branches:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
    repositoryRepoEnvironmentDetailsQuery:
      description: RepoEnvironmentDetailsQuery contains query information for app details request
      type: object
      properties:
        appName:
          type: string
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
    repositoryRepoEnvironmentDetailsResponse:
      description: RepoEnvironmentDetailsResponse environment details
      type: object
      properties:
        directory:
          $ref: '#/components/schemas/repositoryDirectoryEnvironmentSpec'
        type:
          type: string
    repositoryRepoEnvironmentsResponse:
      description: RepoEnvironmentsResponse contains environments of specified repository
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/repositoryEnvironmentInfo'
    repositoryRepoResponse:
      type: object
    runtimeError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/contentAny'
        error:
          type: string
        message:
          type: string
    v1Event:
      type: object
      properties:
        action:
          description: |-
            What action was taken/failed regarding to the Regarding object.
            +optional
          type: string
        count:
          description: |-
            The number of times this event has occurred.
            +optional
          type: integer
          format: int32
        eventTime:
          $ref: '#/components/schemas/v1MicroTime'
        firstTimestamp:
          $ref: '#/components/schemas/v1Time'
        involvedObject:
          $ref: '#/components/schemas/v1ObjectReference'
        lastTimestamp:
          $ref: '#/components/schemas/v1Time'
        message:
          description: |-
            A human-readable description of the status of this operation.
            TODO: decide on maximum length.
            +optional
          type: string
        metadata:
          $ref: '#/components/schemas/v1ObjectMeta'
        reason:
          description: |-
            This should be a short, machine understandable string that gives the reason
            for the transition into the object's current status.
            TODO: provide exact specification for format.
            +optional
          type: string
        related:
          $ref: '#/components/schemas/v1ObjectReference'
        reportingComponent:
          description: |-
            Name of the controller that emitted the Event.
            +optional
          type: string
        reportingInstance:
          description: |-
            ID of the controller instance.
            +optional
          type: string
        series:
          $ref: '#/components/schemas/v1EventSeries'
        source:
          $ref: '#/components/schemas/v1EventSource'
        type:
          description: |-
            Type of this event (Normal, Warning), new types could be added in the future
            +optional
          type: string
      description: |-
        Event is a report of an event somewhere in the provider.  Events
        have a limited retention time and triggers and messages may evolve
        with time.  Event consumers should not rely on the timing of an event
        with a given Reason reflecting a consistent underlying trigger, or the
        continued existence of events with that Reason.  Events should be
        treated as informative, best-effort, supplemental data.
    v1EventList:
      type: object
      properties:
        items:
          description: List of events
          type: array
          items:
            $ref: '#/components/schemas/v1Event'
        metadata:
          $ref: '#/components/schemas/v1ListMeta'
      description: EventList is a list of events.
    v1EventSeries:
      type: object
      properties:
        count:
          description: Number of occurrences in this series up to the last heartbeat time
          type: integer
          format: int32
        lastObservedTime:
          $ref: '#/components/schemas/v1MicroTime'
      description: |-
        EventSeries contain information on series of events, i.e. thing that was/is happening
        continuously for some time.
    v1EventSource:
      type: object
      properties:
        component:
          description: |-
            Component from which the event is generated.
            +optional
          type: string
        host:
          description: |-
            Node name on which the event is generated.
            +optional
          type: string
      description: EventSource contains information for an event.
    v1FieldsV1:
      type: object
      properties:
        Raw:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Raw is the underlying serialization of this object.
          format: byte
      description: |-
        FieldsV1 stores a set of fields in a data structure like a Tree, in JSON format.
    v1GroupKind:
      type: object
      properties:
        group:
          type: string
        kind:
          type: string
      description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying
        concepts during lookup stages without having partially valid types
    v1ListMeta:
      type: object
      properties:
        continue:
          type: string
          description: |-
            continue may be set if the user set a limit on the number of items returned, and indicates that
            the server has more data available. The value is opaque and may be used to issue another request
            to the endpoint that served this list to retrieve the next set of available objects. Continuing a
            consistent list may not be possible if the server configuration has changed or more than a few
            minutes have passed. The resourceVersion field returned when using this continue value will be
            identical to the value in the first response, unless you have received this token from an error
            message.
        remainingItemCount:
          description: |-
            remainingItemCount is the number of subsequent items in the list which are not included in this
            list response. If the list request contained label or field selectors, then the number of
            remaining items is unknown and the field will be left unset and omitted during serialization.
            If the list is complete (either because it is not chunking or because this is the last chunk),
            then there are no more remaining items and this field will be left unset and omitted during
            serialization.
          type: string
          format: int64
        resourceVersion:
          description: |-
            String that identifies the server's internal version of this object that
            can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back to the server.
            Populated by the system.
            Read-only.
          type: string
      description: |-
        ListMeta describes metadata that synthetic resources must have, including lists and
        various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    v1LoadBalancerIngress:
      type: object
      properties:
        hostname:
          description: |-
            Hostname is set for load-balancer ingress points that are DNS based
            (typically AWS load-balancers)
            +optional
          type: string
        ip:
          description: |-
            IP is set for load-balancer ingress points that are IP based
          type: string
        ports:
          description: |-
            Ports is a list of records of service ports
            If used, every port defined in the service should have an entry in it
          type: array
          items:
            $ref: '#/components/schemas/v1PortStatus'
      description: |-
        LoadBalancerIngress represents the status of a load-balancer ingress point:
        traffic intended for the service should be sent to an ingress point.
    v1ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the version of this resource that this field set
            applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field
            set because it cannot be automatically converted.
        fieldsType:
          description: |-
            FieldsType is the discriminator for the different fields format and version.
            There is currently only one possible value: "FieldsV1"
          type: string
        fieldsV1:
          $ref: '#/components/schemas/v1FieldsV1'
        manager:
          type: string
          description: Manager is an identifier of the workflow managing these fields.
        operation:
          type: string
          description: |-
            Operation is the type of operation which lead to this ManagedFieldsEntry being created.
            The only valid values for this field are 'Apply' and 'Update'.
        time:
          $ref: '#/components/schemas/v1Time'
      description: |-
        ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
        that the fieldset applies to.
    v1MicroTime:
      type: object
      properties:
        nanos:
          type: integer
          description: |-
            Non-negative fractions of a second at nanosecond resolution. Negative
            second values with fractions must still have non-negative nanos values
            that count forward in time. Must be from 0 to 999,999,999
            inclusive. This field may be limited in precision depending on context.
          format: int32
        seconds:
          type: string
          description: |-
            Represents seconds of UTC time since Unix epoch
            1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
            9999-12-31T23:59:59Z inclusive.
          format: int64
      description: |-
        MicroTime is version of Time with microsecond level precision.
    v1NodeSystemInfo:
      type: object
      properties:
        architecture:
          description: The Architecture reported by the node
          type: string
        bootID:
          type: string
          description: Boot ID reported by the node.
        containerRuntimeVersion:
          type: string
          description: ContainerRuntime Version reported by the node through runtime
            remote API (e.g. docker://1.5.0).
        kernelVersion:
          type: string
          description: Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
        kubeProxyVersion:
          type: string
          description: KubeProxy Version reported by the node.
        kubeletVersion:
          type: string
          description: Kubelet Version reported by the node.
        machineID:
          description: |-
            MachineID reported by the node. For unique machine identification
            in the provider this field is preferred. Learn more from man(5)
            machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
          type: string
        operatingSystem:
          description: The Operating System reported by the node
          type: string
        osImage:
          type: string
          description: OS Image reported by the node from /etc/os-release (e.g. Debian
            GNU/Linux 7 (wheezy)).
        systemUUID:
          description: |-
            SystemUUID reported by the node. For unique machine identification
            MachineID is preferred. This field is specific to Red Hat hosts
            https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
          type: string
      description: NodeSystemInfo is a set of ids/uuids to uniquely identify the node. TODO this should be included in provider
    v1ObjectMeta:
      type: object
      properties:
        annotations:
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
          type: object
          additionalProperties:
            type: string
        providerName:
          description: |-
            The name of the provider which the object belongs to.
            This is used to distinguish resources with same name and namespace in different providers.
            This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
            +optional
          type: string
        creationTimestamp:
          $ref: '#/components/schemas/v1Time'
        deletionGracePeriodSeconds:
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
          type: string
          format: int64
        deletionTimestamp:
          $ref: '#/components/schemas/v1Time'
        finalizers:
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
          type: array
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.
        generation:
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
          type: string
          format: int64
        labels:
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: http://kubernetes.io/docs/user-guide/labels
            +optional
          type: object
          additionalProperties:
            type: string
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
          items:
            $ref: '#/components/schemas/v1ManagedFieldsEntry'
        name:
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
            +optional
          type: string
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: http://kubernetes.io/docs/user-guide/namespaces
            +optional
        ownerReferences:
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
          type: array
          items:
            $ref: '#/components/schemas/v1OwnerReference'
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
      description: |-
        ObjectMeta is metadata that all persisted resources must have, which includes all objects
        users must create.
    v1ObjectReference:
      description: |-
        ObjectReference contains enough information to let you inspect or modify the referred object.
      type: object
      properties:
        apiVersion:
          description: |-
            API version of the referent.
          type: string
        fieldPath:
          description: |-
            If referring to a piece of an object instead of an entire object
          type: string
        kind:
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
          type: string
        name:
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
          type: string
        namespace:
          description: |-
            Namespace of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            +optional
          type: string
        resourceVersion:
          description: |-
            Specific resourceVersion to which this reference is made, if any.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
          type: string
        uid:
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
            +optional
          type: string
    v1OwnerReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the referent.
        blockOwnerDeletion:
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
          type: boolean
        controller:
          description: |-
            If true, this reference points to the managing controller.
            +optional
          type: boolean
        kind:
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        name:
          description: |-
            Name of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
          type: string
        uid:
          description: |-
            UID of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          type: string
      description: |-
        OwnerReference contains enough information to let you identify an owning
        object. An owning object must be in the same namespace as the dependent, or
        be provider-scoped, so there is no namespace field.
    v1PortStatus:
      type: object
      properties:
        error:
          description: |-
            Error is to record the problem with the service port
            The format of the error shall comply with the following rules:
            - built-in error values shall be specified in this file and those shall use
              CamelCase names
            - cloud provider specific error values must have names that comply with the
              format foo.example.com/CamelCase.
          type: string
        port:
          description: Port is the port number of the service port of which status is recorded
            here
          type: integer
          format: int32
        protocol:
          description: |-
            Protocol is the protocol of the service port of which status is recorded here
            Candidate values are: "TCP", "UDP", "SCTP"
          type: string
    v1Time:
      type: object
      properties:
        nanos:
          type: integer
          description: |-
            Non-negative fractions of a second at nanosecond resolution. Negative
            second values with fractions must still have non-negative nanos values
            that count forward in time. Must be from 0 to 999,999,999
            inclusive. This field may be limited in precision depending on context.
          format: int32
        seconds:
          type: string
          description: |-
            Represents seconds of UTC time since Unix epoch
            1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
            9999-12-31T23:59:59Z inclusive.
          format: int64
      description: |-
        Time is a wrapper around time.Time which supports correct
        marshaling to YAML and JSON.  Wrappers are provided for many
        of the factory methods that the time package offers.

    v1alphaEnvironment:
      description: |-
        Environment description
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/v1ObjectMeta'
        operation:
          $ref: '#/components/schemas/v1alphaOperation'
        spec:
          $ref: '#/components/schemas/v1alphaEnvironmentSpec'
        status:
          $ref: '#/components/schemas/v1alphaEnvironmentStatus'
    v1alphaEnvironmentCondition:
      description: EnvironmentCondition contains details about an environment condition,
        which is usally an error or warning
      type: object
      properties:
        lastTransitionTime:
          $ref: '#/components/schemas/v1Time'
        message:
          description: Message contains human-readable message indicating details about
            condition
          type: string
        type:
          description: Type is an environment condition type
          type: string
    v1alphaEnvironmentDestination:
      description: EnvironmentDestination holds information about the environment's destination
      type: object
      properties:
        name:
          description: Name is an alternate way of specifying the target provider by its
            symbolic name
          type: string
        namespace:
          description: |-
            Namespace specifies the target namespace for the environment's resources.
            The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
          type: string
        server:
          description: Server specifies the URL of the target provider and must be set to
            the Kubernetes control plane API
          type: string
    v1alphaEnvironmentList:
      description: |-
        EnvironmentList is list of Environment resources
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaEnvironment'
        metadata:
          $ref: '#/components/schemas/v1ListMeta'
    v1alphaEnvironmentSource:
      description: EnvironmentSource contains all required information about the source
        of an environment
      type: object
      properties:
        chart:
          type: string
          description: Chart is a Helm chart name, and must be specified for environments
            sourced from a Helm repo.
        directory:
          $ref: '#/components/schemas/v1alphaEnvironmentSourceDirectory'
        path:
          type: string
          description: Path is a directory path within the Git repository, and is
            only valid for environments sourced from Git.
        plugin:
          $ref: '#/components/schemas/v1alphaEnvironmentSourcePlugin'
        repoURL:
          description: RepoURL is the URL to the repository (Git) that contains
            the environment manifests
          type: string
        targetRevision:
          type: string
          description: |-
            TargetRevision defines the revision of the source to sync the environment to.
    v1alphaEnvironmentSourceDirectory:
      description: EnvironmentSourceDirectory holds options for environments of type plain
        YAML or Jsonnet
      type: object
      properties:
        exclude:
          description: Exclude contains a glob pattern to match paths against that should
            be explicitly excluded from being used during manifest generation
          type: string
        include:
          description: Include contains a glob pattern to match paths against that should
            be explicitly included during manifest generation
          type: string
        recurse:
          description: Recurse specifies whether to scan a directory recursively for manifests
          type: boolean
    v1alphaEnvironmentSourcePlugin:
      description: EnvironmentSourcePlugin holds options specific to config management plugins
      type: object
      properties:
        env:
          type: array
          items:
            $ref: '#/components/schemas/environmentv1alphaEnvEntry'
        name:
          type: string
    v1alphaEnvironmentSpec:
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/v1alphaEnvironmentDestination'
        ignoreDifferences:
          description: IgnoreDifferences is a list of resources and their fields which should
            be ignored during comparison
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceIgnoreDifferences'
        info:
          description: Info contains a list of information (URLs, email addresses, and plain
            text) that relates to the environment
          type: array
          items:
            $ref: '#/components/schemas/v1alphaInfo'
        revisionHistoryLimit:
          type: string
          description: |-
            RevisionHistoryLimit limits the number of items kept in the environment's revision history, which is used for informational purposes as well as for rollbacks to previous versions.
            This should only be changed in exceptional circumstances.
            Setting to zero will store no history. This will reduce storage used.
            Increasing will increase the space used to store the history, so we do not recommend increasing it.
            Default is 10.
          format: int64
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
        syncPolicy:
          $ref: '#/components/schemas/v1alphaSyncPolicy'
      description: EnvironmentSpec represents desired environment state. Contains
        link to repository with environment definition and additional parameters link
        definition revision.
    v1alphaEnvironmentStatus:
      description: EnvironmentStatus contains status information for the environment
      type: object
      properties:
        conditions:
          description: Conditions is a list of currently observed environment conditions
          type: array
          items:
            $ref: '#/components/schemas/v1alphaEnvironmentCondition'
        health:
          $ref: '#/components/schemas/v1alphaHealthStatus'
        history:
          description: History contains information about the environment's sync history
          type: array
          items:
            $ref: '#/components/schemas/v1alphaRevisionHistory'
        observedAt:
          $ref: '#/components/schemas/v1Time'
        operationState:
          $ref: '#/components/schemas/v1alphaOperationState'
        reconciledAt:
          $ref: '#/components/schemas/v1Time'
        resources:
          description: Resources is a list of Kubernetes resources managed by this environment
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceStatus'
        sourceType:
          description: SourceType specifies the type of this environment
          type: string
        summary:
          $ref: '#/components/schemas/v1alphaEnvironmentSummary'
        sync:
          $ref: '#/components/schemas/v1alphaSyncStatus'
    v1alphaEnvironmentSummary:
      description: EnvironmentSummary contains information about URLs and container images
        used by an environment
      type: object
      properties:
        externalURLs:
          type: array
          description: ExternalURLs holds all external URLs of environment child resources.
          items:
            type: string
        images:
          type: array
          description: Images holds all images of environment child resources.
          items:
            type: string
    v1alphaEnvironmentTree:
      description: |-
        EnvironmentTree holds nodes which belongs to the environment
        TODO: describe purpose of this type
      type: object
      properties:
        hosts:
          description: Hosts holds list of Kubernetes nodes that run environment related
            pods
          type: array
          items:
            $ref: '#/components/schemas/v1alphaHostInfo'
        nodes:
          type: array
          description: Nodes contains list of nodes which either directly managed
            by the environment and children of directly managed nodes.
          items:
            $ref: '#/components/schemas/v1alphaResourceNode'
    v1alphaEnvironmentWatchEvent:
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/v1alphaEnvironment'
        type:
          type: string
      description: EnvironmentWatchEvent contains information about environment change.
    v1alphaBackoff:
      description: Backoff is the backoff strategy to use on subsequent retries for failing
        syncs
      type: object
      properties:
        duration:
          description: Duration is the amount to back off. Default unit is seconds, but
            could also be a duration (e.g. "2m", "1h")
          type: string
        factor:
          description: Factor is a factor to multiply the base duration after each failed
            retry
          type: string
          format: int64
        maxDuration:
          description: MaxDuration is the maximum amount of time allowed for the backoff
            strategy
          type: string
    v1alphaProvider:
      description: Provider is the definition of a provider resource
      type: object
      properties:
        annotations:
          description: Annotations for provider secret metadata
          type: object
          additionalProperties:
            type: string
        providerResources:
          type: boolean
          description: Indicates if provider level resources should be managed. This
            setting is used only if provider is connected in a namespaced mode.
        config:
          $ref: '#/components/schemas/v1alphaProviderConfig'
        connectionState:
          $ref: '#/components/schemas/v1alphaConnectionState'
        info:
          $ref: '#/components/schemas/v1alphaProviderInfo'
        labels:
          description: Labels for provider secret metadata
          type: object
          additionalProperties:
            type: string
        name:
          description: Name of the provider. If omitted, will use the server address
          type: string
        namespaces:
          type: array
          description: Holds list of namespaces which are accessible in that provider.
            Provider level resources will be ignored if namespace list is not empty.
          items:
            type: string
        refreshRequestedAt:
          $ref: '#/components/schemas/v1Time'
        server:
          description: Server is the API server URL of the provider
          type: string
        shard:
          type: string
          description: Shard contains optional shard number. Calculated on the fly
            by the environment controller if not specified.
          format: int64
    v1alphaProviderCacheInfo:
      description: ProviderCacheInfo contains information about the provider cache
      type: object
      properties:
        apisCount:
          description: APIsCount holds number of observed  API count
          type: string
          format: int64
        lastCacheSyncTime:
          $ref: '#/components/schemas/v1Time'
        resourcesCount:
          description: ResourcesCount holds number of observed Kubernetes resources
          type: string
          format: int64
    v1alphaProviderConfig:
      type: object
      properties:
        bearerToken:
          type: string
          description: |-
            Server requires Bearer authentication. This client will not attempt to use
            refresh tokens for an OAuth2 flow.
        execProviderConfig:
          $ref: '#/components/schemas/v1alphaExecProviderConfig'
        password:
          type: string
        tlsClientConfig:
          $ref: '#/components/schemas/v1alphaTLSClientConfig'
        username:
          description: Server requires Basic authentication
          type: string
      description: |-
        ProviderConfig is the configuration attributes. This structure is subset of the go-client
        rest.Config with annotations added for marshalling.
    v1alphaProviderInfo:
      description: ProviderInfo contains information about the provider
      type: object
      properties:
        apiVersions:
          description: APIVersions contains list of API versions supported by the provider
          type: array
          items:
            type: string
        environmentsCount:
          description: EnvironmentsCount is the number of environments managed on the provider
          type: string
          format: int64
        cacheInfo:
          $ref: '#/components/schemas/v1alphaProviderCacheInfo'
        connectionState:
          $ref: '#/components/schemas/v1alphaConnectionState'
        serverVersion:
          description: ServerVersion contains information about the version of
            the provider
          type: string
    v1alphaProviderList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaProvider'
        metadata:
          $ref: '#/components/schemas/v1ListMeta'
      description: ProviderList is a collection of Providers.
    v1alphaCommand:
      description: Command holds binary path and arguments list
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        command:
          type: array
          items:
            type: string
    v1alphaComparedTo:
      description: ComparedTo contains environment source and target which was used for
        resources comparison
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/v1alphaEnvironmentDestination'
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
    v1alphaConfigManagementPlugin:
      description: ConfigManagementPlugin contains config management plugin configuration
      type: object
      properties:
        generate:
          $ref: '#/components/schemas/v1alphaCommand'
        init:
          $ref: '#/components/schemas/v1alphaCommand'
        name:
          type: string
    v1alphaConnectionState:
      description: ConnectionState contains information about remote resource connection
        state, currently used for providers and repositories
      type: object
      properties:
        attemptedAt:
          $ref: '#/components/schemas/v1Time'
        message:
          description: Message contains human readable information about the connection
            status
          type: string
        status:
          description: Status contains the current status indicator for the connection
          type: string
    v1alphaExecProviderConfig:
      description: |-
        ExecProviderConfig is config used to call an external command to perform provider authentication
      type: object
      properties:
        apiVersion:
          description: Preferred input version of the ExecInfo
          type: string
        args:
          description: Arguments to pass to the command when executing it
          type: array
          items:
            type: string
        command:
          description: Command to execute
          type: string
        env:
          description: Env defines additional environment variables to expose to the process
          type: object
          additionalProperties:
            type: string
        installHint:
          description: This text is shown to the user when the executable doesn't seem to
            be present
          type: string
    v1alphaHealthStatus:
      description: HealthStatus contains information about the currently observed health
        state of an environment or resource
      type: object
      properties:
        message:
          description: Message is a human-readable informational message describing the
            health status
          type: string
        status:
          description: Status holds the status code of the environment or resource
          type: string
    v1alphaHostInfo:
      description: |-
        HostInfo holds host name and resources metrics
        TODO: describe purpose of this type
        TODO: describe members of this type
      type: object
      properties:
        name:
          type: string
        resourcesInfo:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaHostResourceInfo'
        systemInfo:
          $ref: '#/components/schemas/v1NodeSystemInfo'
    v1alphaHostResourceInfo:
      description: 'TODO: describe this type'
      type: object
      properties:
        capacity:
          type: string
          format: int64
        requestedByApp:
          type: string
          format: int64
        requestedByNeighbors:
          type: string
          format: int64
        resourceName:
          type: string
    v1alphaInfo:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    v1alphaInfoItem:
      description: InfoItem contains arbitrary, human readable information about an environment
      type: object
      properties:
        name:
          type: string
          description: Name is a human readable title for this piece of information.
        value:
          type: string
          description: Value is human readable content.
    v1alphaJWTToken:
      description: JWTToken holds the issuedAt and expiresAt values of a token
      type: object
      properties:
        exp:
          type: string
          format: int64
        iat:
          type: string
          format: int64
        id:
          type: string
    v1alphaJWTTokens:
      description: JWTTokens represents a list of JWT tokens
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaJWTToken'
    v1alphaKnownTypeField:
      description: |-
        KnownTypeField contains mapping between CRD field and known Kubernetes type.
        This is mainly used for unit conversion in unknown resources (e.g. 0.1 == 100mi)
        TODO: Describe the members of this type
      type: object
      properties:
        field:
          type: string
        type:
          type: string
    v1alphaOperation:
      description: Operation contains information about a requested or running operation
      type: object
      properties:
        info:
          description: Info is a list of informational items for this operation
          type: array
          items:
            $ref: '#/components/schemas/v1alphaInfo'
        initiatedBy:
          $ref: '#/components/schemas/v1alphaOperationInitiator'
        retry:
          $ref: '#/components/schemas/v1alphaRetryStrategy'
        sync:
          $ref: '#/components/schemas/v1alphaSyncOperation'
    v1alphaOperationInitiator:
      description: OperationInitiator contains information about the initiator of an operation
      type: object
      properties:
        automated:
          type: boolean
          description: Automated is set to true if operation was initiated automatically
            by the environment controller.
        username:
          description: Username contains the name of a user who started operation
          type: string
    v1alphaOperationState:
      description: OperationState contains information about state of a running operation
      type: object
      properties:
        finishedAt:
          $ref: '#/components/schemas/v1Time'
        message:
          type: string
          description: Message holds any pertinent messages when attempting to perform
            operation (typically errors).
        operation:
          $ref: '#/components/schemas/v1alphaOperation'
        phase:
          description: Phase is the current phase of the operation
          type: string
        retryCount:
          description: RetryCount contains time of operation retries
          type: string
          format: int64
        startedAt:
          $ref: '#/components/schemas/v1Time'
        syncResult:
          $ref: '#/components/schemas/v1alphaSyncOperationResult'
    v1alphaOrphanedResourceKey:
      description: OrphanedResourceKey is a reference to a resource to be ignored from
      type: object
      properties:
        group:
          type: string
        kind:
          type: string
        name:
          type: string
    v1alphaOrphanedResourcesMonitorSettings:
      description: OrphanedResourcesMonitorSettings holds settings of orphaned resources
        monitoring
      type: object
      properties:
        ignore:
          description: Ignore contains a list of resources that are to be excluded from
            orphaned resources monitoring
          type: array
          items:
            $ref: '#/components/schemas/v1alphaOrphanedResourceKey'
        warn:
          description: Warn indicates if warning condition should be created for environments which
            have orphaned resources
          type: boolean
    v1alphaOverrideIgnoreDiff:
      description: 'TODO: describe this type'
      type: object
      properties:
        jSONPointers:
          type: array
          items:
            type: string
        jqPathExpressions:
          type: array
          items:
            type: string
    v1alphaRepoCreds:
      description: RepoCreds holds the definition for repository credentials
      type: object
      properties:
        password:
          description: Password for authenticating at the repo server
          type: string
        sshPrivateKey:
          description: SSHPrivateKey contains the private key data for authenticating at
            the repo server using SSH (only Git repos)
          type: string
        tlsClientCertData:
          description: TLSClientCertData specifies the TLS client cert data for authenticating
            at the repo server
          type: string
        tlsClientCertKey:
          description: TLSClientCertKey specifies the TLS client cert key for authenticating
            at the repo server
          type: string
        type:
          type: string
          description: Type specifies the type of the repoCreds. Can be either "git"
            or "helm. "git" is assumed if empty or absent.
        url:
          description: URL is the URL that this credentials matches to
          type: string
        username:
          description: Username for authenticating at the repo server
          type: string
    v1alphaRepoCredsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaRepoCreds'
        metadata:
          $ref: '#/components/schemas/v1ListMeta'
      description: RepositoryList is a collection of Repositories.
    v1alphaRepository:
      description: Repository is a repository holding environment configurations
      type: object
      properties:
        connectionState:
          $ref: '#/components/schemas/v1alphaConnectionState'
        enableLfs:
          type: boolean
          description: EnableLFS specifies whether git-lfs support should be enabled
            for this repo. Only valid for Git repositories.
        inheritedCreds:
          description: Whether credentials were inherited from a credential set
          type: boolean
        insecure:
          description: Insecure specifies whether the connection to the repository ignores
            any errors when verifying TLS certificates or SSH host keys
          type: boolean
        insecureIgnoreHostKey:
          description: |-
            InsecureIgnoreHostKey should not be used anymore, Insecure is favoured
            Used only for Git repos
          type: boolean
        name:
          description: Name specifies a name to be used for this repo. Only used with Helm
            repos
          type: string
        password:
          description: Password contains the password or PAT used for authenticating at
            the remote repository
          type: string
        proxy:
          description: Proxy specifies the HTTP/HTTPS proxy used to access the repo
          type: string
        repo:
          description: Repo contains the URL to the remote repository
          type: string
        sshPrivateKey:
          type: string
          description: SSHPrivateKey contains the PEM data for authenticating at the
            repo server. Only used with Git repos.
        tlsClientCertData:
          description: TLSClientCertData contains a certificate in PEM format for authenticating
            at the repo server
          type: string
        tlsClientCertKey:
          description: TLSClientCertKey contains a private key in PEM format for authenticating
            at the repo server
          type: string
        type:
          type: string
          description: Type specifies the type of the repo. Can be either "git" or
            "helm. "git" is assumed if empty or absent.
        username:
          description: Username contains the user name used for authenticating at the remote
            repository
          type: string
    v1alphaRepositoryList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaRepository'
        metadata:
          $ref: '#/components/schemas/v1ListMeta'
      description: RepositoryList is a collection of Repositories.
    v1alphaResourceAction:
      description: |-
        TODO: describe this type
        TODO: describe members of this type
      type: object
      properties:
        disabled:
          type: boolean
        name:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceActionParam'
    v1alphaResourceActionParam:
      description: |-
        TODO: describe this type
        TODO: describe members of this type
      type: object
      properties:
        default:
          type: string
        name:
          type: string
        type:
          type: string
        value:
          type: string
    v1alphaResourceDiff:
      description: |-
        ResourceDiff holds the diff of a live and target resource object
        TODO: describe members of this type
      type: object
      properties:
        diff:
          description: |-
            Diff contains the JSON patch between target and live resource
            Deprecated: use NormalizedLiveState and PredictedLiveState to render the difference
          type: string
        group:
          type: string
        hook:
          type: boolean
        kind:
          type: string
        liveState:
          description: TargetState contains the JSON live resource manifest
          type: string
        modified:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        normalizedLiveState:
          description: NormalizedLiveState contains JSON serialized live resource state
            with applied normalizations
          type: string
        predictedLiveState:
          description: PredictedLiveState contains JSON serialized resource state that is
            calculated based on normalized and target resource state
          type: string
        resourceVersion:
          type: string
        targetState:
          description: TargetState contains the JSON serialized resource manifest defined
            in the Git
          type: string
    v1alphaResourceIgnoreDifferences:
      type: object
      properties:
        group:
          type: string
        jqPathExpressions:
          type: array
          items:
            type: string
        jsonPointers:
          type: array
          items:
            type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
      description: ResourceIgnoreDifferences contains resource filter and list of
        json paths which should be ignored during comparison with live state.
    v1alphaResourceNetworkingInfo:
      description: |-
        ResourceNetworkingInfo holds networking resource related information
        TODO: describe members of this type
      type: object
      properties:
        externalURLs:
          type: array
          description: ExternalURLs holds list of URLs which should be available externally.
            List is populated for ingress resources using rules hostnames.
          items:
            type: string
        ingress:
          type: array
          items:
            $ref: '#/components/schemas/v1LoadBalancerIngress'
        labels:
          type: object
          additionalProperties:
            type: string
        targetLabels:
          type: object
          additionalProperties:
            type: string
        targetRefs:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceRef'
    v1alphaResourceNode:
      description: |-
        ResourceNode contains information about live resource and its children
        TODO: describe members of this type
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/v1Time'
        health:
          $ref: '#/components/schemas/v1alphaHealthStatus'
        images:
          type: array
          items:
            type: string
        info:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaInfoItem'
        networkingInfo:
          $ref: '#/components/schemas/v1alphaResourceNetworkingInfo'
        parentRefs:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceRef'
        resourceRef:
          $ref: '#/components/schemas/v1alphaResourceRef'
        resourceVersion:
          type: string
    v1alphaResourceOverride:
      description: |-
        ResourceOverride holds configuration to customize resource diffing and health assessment
        TODO: describe the members of this type
      type: object
      properties:
        actions:
          type: string
        healthLua:
          type: string
        ignoreDifferences:
          $ref: '#/components/schemas/v1alphaOverrideIgnoreDiff'
        knownTypeFields:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaKnownTypeField'
        useOpenLibs:
          type: boolean
    v1alphaResourceRef:
      description: ResourceRef includes fields which uniquely identify a resource
      type: object
      properties:
        group:
          type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        uid:
          type: string
        version:
          type: string
    v1alphaResourceResult:
      description: ResourceResult holds the operation result details of a specific resource
      type: object
      properties:
        group:
          description: Group specifies the API group of the resource
          type: string
        hookPhase:
          type: string
          description: |-
            HookPhase contains the state of any operation associated with this resource OR hook
            This can also contain values for non-hook resources.
        hookType:
          description: HookType specifies the type of the hook. Empty for non-hook resources
          type: string
        kind:
          description: Kind specifies the API kind of the resource
          type: string
        message:
          description: Message contains an informational or error message for the last sync
            OR operation
          type: string
        name:
          description: Name specifies the name of the resource
          type: string
        namespace:
          description: Namespace specifies the target namespace of the resource
          type: string
        status:
          description: Status holds the final result of the sync. Will be empty if the resources
            is yet to be applied/pruned and is always zero-value for hooks
          type: string
        syncPhase:
          description: SyncPhase indicates the particular phase of the sync that this result
            was acquired in
          type: string
        version:
          description: Version specifies the API version of the resource
          type: string
    v1alphaResourceStatus:
      description: |-
        ResourceStatus holds the current sync and health status of a resource
        TODO: describe members of this type
      type: object
      properties:
        group:
          type: string
        health:
          $ref: '#/components/schemas/v1alphaHealthStatus'
        hook:
          type: boolean
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        requiresPruning:
          type: boolean
        status:
          type: string
        version:
          type: string
    v1alphaRetryStrategy:
      description: RetryStrategy contains information about the strategy to apply when a
        sync failed
      type: object
      properties:
        backoff:
          $ref: '#/components/schemas/v1alphaBackoff'
        limit:
          type: string
          description: Limit is the maximum number of attempts for retrying a failed
            sync. If set to 0, no retries will be performed.
          format: int64
    v1alphaRevisionHistory:
      description: RevisionHistory contains history information about a previous sync
      type: object
      properties:
        deployStartedAt:
          $ref: '#/components/schemas/v1Time'
        deployedAt:
          $ref: '#/components/schemas/v1Time'
        id:
          description: ID is an auto incrementing identifier of the RevisionHistory
          type: string
          format: int64
        revision:
          description: Revision holds the revision the sync was performed against
          type: string
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
    v1alphaRevisionMetadata:
      description: RevisionMetadata contains metadata for a specific revision in a Git repository
      type: object
      properties:
        author:
          description: |-
            who authored this revision,
            typically their name and email, e.g. "John Doe <john_doe@my-company.com>",
            but might not match this example
          type: string
        date:
          $ref: '#/components/schemas/v1Time'
        message:
          description: |-
            Message contains the message associated with the revision, most likely the commit message.
            The message is truncated to the first newline or 64 characters (which ever comes first)
          type: string
        signatureInfo:
          type: string
          description: SignatureInfo contains a hint on the signer if the revision
            was signed with GPG, and signature verification is enabled.
        tags:
          description: |-
            Tags specifies any tags currently attached to the revision
            Floating tags can move from one revision to another
          type: array
          items:
            type: string
    v1alphaSignatureKey:
      description: SignatureKey is the specification of a key required to verify commit
        signatures with
      type: object
      properties:
        keyID:
          description: The ID of the key in hexadecimal notation
          type: string
    v1alphaSyncOperation:
      type: object
      properties:
        dryRun:
          description: DryRun specifies to perform an apply without actually performing the sync
          type: boolean
        manifests:
          description: Manifests is an optional field that overrides sync source with a
            local directory for development
          type: array
          items:
            type: string
        prune:
          description: Prune specifies to delete resources from the provider that are no
            longer tracked in git
          type: boolean
        resources:
          description: Resources describes which resources shall be part of the sync
          type: array
          items:
            $ref: '#/components/schemas/v1alphaSyncOperationResource'
        revision:
          type: string
          description: |-
            Revision is the revision (Git) or chart version (Helm) which to sync the environment to
            If omitted, will use the revision specified in app spec.
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
        syncOptions:
          description: SyncOptions provide per-sync sync-options, e.g. Validate=false
          type: array
          items:
            type: string
        syncStrategy:
          $ref: '#/components/schemas/v1alphaSyncStrategy'
      description: SyncOperation contains details about a sync operation.
    v1alphaSyncOperationResource:
      type: object
      properties:
        group:
          type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
      description: SyncOperationResource contains resources to sync.
    v1alphaSyncOperationResult:
      description: SyncOperationResult represent result of sync operation
      type: object
      properties:
        resources:
          description: Resources contains a list of sync result items for each individual
            resource in a sync operation
          type: array
          items:
            $ref: '#/components/schemas/v1alphaResourceResult'
        revision:
          description: Revision holds the revision this sync operation was performed to
          type: string
        source:
          $ref: '#/components/schemas/v1alphaEnvironmentSource'
    v1alphaSyncPolicy:
      description: SyncPolicy controls when a sync will be performed in response to updates
        in git
      type: object
      properties:
        automated:
          $ref: '#/components/schemas/v1alphaSyncPolicyAutomated'
        retry:
          $ref: '#/components/schemas/v1alphaRetryStrategy'
        syncOptions:
          description: Options allow you to specify whole app sync-options
          type: array
          items:
            type: string
    v1alphaSyncPolicyAutomated:
      description: SyncPolicyAutomated controls the behavior of an automated sync
      type: object
      properties:
        allowEmpty:
          description: 'AllowEmpty allows environments have zero live resources (default: false)'
          type: boolean
        prune:
          description: 'Prune specifies whether to delete resources from the provider that
            are not found in the sources anymore as part of automated sync (default:
            false)'
          type: boolean
        selfHeal:
          description: 'SelfHeal specifes whether to revert resources back to their desired
            state upon modification in the provider (default: false)'
          type: boolean
    v1alphaSyncStatus:
      description: SyncStatus contains information about the currently observed live and
        desired states of an environment
      type: object
      properties:
        comparedTo:
          $ref: '#/components/schemas/v1alphaComparedTo'
        revision:
          description: Revision contains information about the revision the comparison has
            been performed to
          type: string
        status:
          description: Status is the sync state of the comparison
          type: string
    v1alphaSyncStrategy:
      description: SyncStrategy controls the manner in which a sync is performed
      type: object
      properties:
        apply:
          $ref: '#/components/schemas/v1alphaSyncStrategyApply'
        hook:
          $ref: '#/components/schemas/v1alphaSyncStrategyHook'
    v1alphaSyncStrategyApply:
      description: SyncStrategyApply uses `kubectl apply` to perform the apply
      type: object
      properties:
        force:
          type: boolean
          description: |-
            Force indicates whether or not to supply the --force flag to `kubectl apply`.
            The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
            retried for 5 times.
    v1alphaSyncStrategyHook:
      type: object
      properties:
        syncStrategyApply:
          $ref: '#/components/schemas/v1alphaSyncStrategyApply'
      description: |-
        SyncStrategyHook will perform a sync using hooks annotations.
        If no hook annotation is specified falls back to `kubectl apply`.
    v1alphaSyncWindow:
      description: SyncWindow contains the kind, time, duration and attributes that are
        used to assign the syncWindows to environments
      type: object
      properties:
        environments:
          description: Environments contains a list of environments that the window will
            apply to
          type: array
          items:
            type: string
        providers:
          description: Providers contains a list of providers that the window will apply to
          type: array
          items:
            type: string
        duration:
          description: Duration is the amount of time the sync window will be open
          type: string
        kind:
          description: Kind defines if the window allows or blocks syncs
          type: string
        manualSync:
          description: ManualSync enables manual syncs when they would otherwise be blocked
          type: boolean
        namespaces:
          description: Namespaces contains a list of namespaces that the window will apply
            to
          type: array
          items:
            type: string
        schedule:
          description: Schedule is the time the window will begin, specified in cron format
          type: string
    v1alphaTLSClientConfig:
      description: TLSClientConfig contains settings to enable transport layer security
      type: object
      properties:
        caData:
          description: |-
            CAData holds PEM-encoded bytes (typically read from a root certificates bundle).
            CAData takes precedence over CAFile
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        certData:
          description: |-
            CertData holds PEM-encoded bytes (typically read from a client certificate file).
            CertData takes precedence over CertFile
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        insecure:
          type: boolean
          description: Insecure specifies that the server should be accessed without
            verifying the TLS certificate. For testing only.
        keyData:
          description: |-
            KeyData holds PEM-encoded bytes (typically read from a client certificate key file).
            KeyData takes precedence over KeyFile
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        serverName:
          type: string
          description: |-
            ServerName is passed to the server for SNI and is used in the client to check server
            certificates against. If ServerName is empty, the hostname used to contact the
            server is used.
    versionVersionMessage:
      description: VersionMessage represents version of the API server
      type: object
      properties:
        BuildDate:
          type: string
        Compiler:
          type: string
        GitCommit:
          type: string
        GitTag:
          type: string
        GitTreeState:
          type: string
        GoVersion:
          type: string
        HelmVersion:
          type: string
        JsonnetVersion:
          type: string
        KsonnetVersion:
          type: string
        KubectlVersion:
          type: string
        KustomizeVersion:
          type: string
        Platform:
          type: string
        Version:
          type: string
